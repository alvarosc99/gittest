mutate(Year = as.numeric(str_sub(Year, start = 1, end = 4)))
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
pivot_wider(names_from = "Type", values_from = "Year")
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
pivot_wider(names_from = "Type", values_from = "Year") %>%
unnest()
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next")
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
pivot_wider(names_from = "Type", values_from = "Year")
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
pivot_wider(names_from = "Type", values_from = "Year") %>%
mutate(value = map(value, `length<-`, max(lengths(value))))
?unnest_longer
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n"))
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest_wider(Year)
knitr::opts_chunk$set(echo = TRUE)
library(scrapex)
library(rvest) #It reads HTMLs and has the html_table() funtion to automatically extract all tables from websites. It returns a list, in which there will be a table for each one.
library(httr) #Package for talking to APIs
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
link <- history_elections_spain_ex()
link
browseURL(prep_browser(link))
set_config(
user_agent("Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/109.0; Álvaro Sanz / 100385774@alumnos.uc3m.es")
)
html_website <- link %>% read_html()
html_website
all_tables <-
html_website %>% #We give html_table the web we're working with first...
html_table() #and then extract the tables.
all_tables
elections_data <- all_tables[[5]] #After inspecting all tables, we know that the one we want is number 5
elections_data
elections_data %>% select_if(is.character)
wrong_labels <- c(
"Dissolved",
"[k]",
"[l]",
"[m]",
"n",
"Banned",
"Boycotted",
"Did not run"
)
wrong_labels <- paste0(wrong_labels, collapse = "|")
wrong_labels
semi_cleaned_data <-
elections_data %>%
mutate_if( #It repeats the string replacement for all character columns.
is.character,
~ str_replace_all(string = .x, pattern = wrong_labels, replacement = NA_character_)
)
semi_cleaned_data %>% select_if(is.character)
semi_cleaned_data <-
semi_cleaned_data %>%
mutate(
Election = str_replace_all(string = Election, pattern = "Apr. |Nov. ", replacement = "")
)
semi_cleaned_data %>% select_if(is.character)
semi_cleaned_data <-
semi_cleaned_data %>%
mutate_all(as.numeric) %>%
filter(!is.na(Election))
semi_cleaned_data
semi_cleaned_data <-
semi_cleaned_data %>%
rename_all(~ str_replace_all(.x, "\\[.+\\]", "")) # \\tells the regex that the brackets, as they are special characters, need to be taken literally. The regex means: an opening bracket followed by anything repeated 1 or more times and closed by another bracket.
semi_cleaned_data
# Pivot from wide to long to plot it in ggplot
cleaned_data <-
semi_cleaned_data %>%
pivot_longer(-Election, names_to = "parties")
# Plot it
cleaned_data %>%
ggplot(aes(Election, value, color = parties)) +
geom_line() +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
scale_color_viridis_d() +
theme_minimal()
link <- retirement_age_europe_ex()
link
browseURL(prep_browser(link))
html_retire <- link %>% read_html()
html_retire
tables <- html_retire %>%
html_table()
tables
retirement <- tables[[2]]
retirement
retirement <- retirement %>%
select(1:3) %>%
mutate(Men = str_sub(string = Men, start = 1, end = 2),
Men = as.numeric(Men),
Women = str_sub(string = Women, start = 1, end = 2),
Women = as.numeric(Women))%>%
pivot_longer(cols = c(Men, Women),
names_to = "name", values_to = "Age") %>%
arrange(Age, Country)
retirement
plot <- retirement %>% ggplot(aes(Age, reorder(Country, Age, decreasing = T), color = name)) +
geom_point() +
theme_minimal()
plot
elections <- all_tables[[6]]
elections
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
pivot_wider(names_from = "Type", values_from = "Year") %>%
mutate(value = map(value, `length<-`, max(lengths(value)))) %>%
unnest() %>%
mutate(Year = as.numeric(str_sub(Year, start = 1, end = 4)))
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest_wider(Year)
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n"))
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year)
elections <- all_tables[[6]]
elections
names(elections) <- make.unique(names(elections))
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
pivot_wider(names_from = "Type", values_from = "Year") %>%
mutate(value = map(value, `length<-`, max(lengths(value)))) %>%
unnest() %>%
mutate(Year = as.numeric(str_sub(Year, start = 1, end = 4)))
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next")
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
mutate(Year = as.numeric(str_sub(Year, start = 1, end = 4)))
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
mutate(Year = as.numeric(str_sub(Year, start = 1, end = 4))) %>%
pivot_wider(names_from = "Type", values_from = "Year")
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest_wider(Year)
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
mutate(Year = as.numeric(str_sub(Year, start = 1, end = 4)))
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
mutate(Year = as.numeric(str_sub(Year, start = 1, end = 4))) %>%
pivot_wider(names_from = "Type", values_from = "Year")
htmltools::img(src = knitr::image_uri(file.path("uc3m.jpg")),
alt = 'logo',
style = 'position:absolute; top:0; right:0; padding:10px;',
width="600",
height="80")
htmltools::img(src = knitr::image_uri(file.path("uc3m.jpg")),
alt = 'logo',
style = 'position:absolute; top:0; right:0; padding:10px;',
width="600",
height="80")
library(tidyverse)
library(leaflet)
library(mapboxapi)
library(sf)
library(readxl)
library(rgdal)
library(stringr)
#library(htmltab)
url = "https://infoelectoral.interior.gob.es/estaticos/docxl/apliextr/02201911_MESA.zip"
temp <- tempfile()
download.file(url,dest="data/MESA.zip")
unzip("data/MESA.zip", exdir = "data/")
url = "https://infoelectoral.interior.gob.es/estaticos/docxl/apliextr/02201911_MESA.zip"
temp <- tempfile()
download.file(url,dest="data/MESA.zip")
unzip("data/MESA.zip", exdir = "data/")
setwd("D:/MEGA/UC3M/CSS/2nd semester/Advanced modelling/1st lab")
participacion <- read.fwf("data/09021911.DAT",
widths=c(2,4,2,1,
2,2,3,2,4,1,
7,7,7,7,7,7,7,7,7,7,7,
1),
colClasses=c(rep("numeric",4),
rep("character",6),
rep("numeric",11),
"character"))
colnames(participacion) <- c("tipo","year","month","vuelta","ccaa","provincia","municipio","distrito","seccion","mesa","censo","censo_escrutinio","censo_cere","total_cere","votantes_primer","votantes_segundo","blanco","nulos","votos","afirmativos","negativos","datos_oficiales")
participacion <- read.fwf("data/09021911.DAT",
widths=c(2,4,2,1,
2,2,3,2,4,1,
7,7,7,7,7,7,7,7,7,7,7,
1),
colClasses=c(rep("numeric",4),
rep("character",6),
rep("numeric",11),
"character"))
colnames(participacion) <- c("tipo","year","month","vuelta","ccaa","provincia","municipio","distrito","seccion","mesa","censo","censo_escrutinio","censo_cere","total_cere","votantes_primer","votantes_segundo","blanco","nulos","votos","afirmativos","negativos","datos_oficiales")
View(participacion)
head(participacion)
head(participacion)
participacion = participacion %>%
select(ccaa, provincia, municipio, distrito, seccion, censo, votos) %>%
filter(ccaa<99, provincia<99, municipio<999)
participacion = participacion %>%
mutate(CUSEC = str_trim(paste0(participacion$provincia,participacion$municipio,participacion$distrito,participacion$seccion)))
str(participacion)
head(participacion)
participacion$ccaa = as.factor(participacion$ccaa)
participacion$provincia = as.factor(participacion$provincia)
str(participacion)
head(participacion)
participacion %>% ggplot(aes(x=ccaa,y=censo)) + geom_boxplot(fill="lightblue")
part.aggr = participacion %>%
group_by(provincia,municipio,distrito,seccion,CUSEC) %>%
summarize(total_votos=sum(votos),total_censo=sum(censo)) %>%
mutate(total_part = total_votos/total_censo)
View(part.aggr)
limits <- read_sf("data/LimitesCensoINE/SECC_CE_20200101.shp") %>%
# just in case we want to filter by CCAA
# filter(NCA == "Comunidad de Madrid") %>%
sf::st_transform('+proj=longlat +datum=WGS84')
datos.mapa <- merge(limits,part.aggr,by="CUSEC")
pal <- colorQuantile("Blues", part.aggr$total_part, na.color="white")
labels = paste(datos.mapa$NMUN, "<br>", "Sección censal: ", datos.mapa$CUSEC, "<br>", "Participación: ", round(datos.mapa$total_part*100,2), "%") %>%
lapply(htmltools::HTML)
leaflet(datos.mapa) %>%
#addMapboxTiles(style_id = "streets-v11",
#               username = "mapbox") %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(lng = -3.69,
lat = 40.42,
zoom = 7) %>%
addPolygons(fillColor = ~ pal(total_part),fillOpacity = 0.6,color = "white",weight = .5,
opacity = 1, smoothFactor = 0.2,stroke=T,
label = ~ labels,
highlightOptions = highlightOptions(color = "black",
weight = 2,
bringToFront = F))
renta = read_excel('data/RentaMadrid31097.xlsx', skip=8, col_names = F, trim_ws=T,col_types=c("text", "numeric"))
renta$CUSEC = substr(renta$...1, 1, 10)
renta$rentaMedia = renta$...2
renta = renta %>% select(CUSEC, rentaMedia)
datos.madrid = filter(datos.mapa, provincia == 28) # just Madrid
datos.madrid <- merge(datos.madrid, renta, by="CUSEC")
datos.madrid = filter(datos.mapa, provincia == 28) # just Madrid
datos.madrid <- merge(datos.madrid, renta, by="CUSEC")
datos.madrid %>%
ggplot(aes(x = rentaMedia, y = total_part, label=NMUN, size=total_censo, color=rentaMedia, fill=rentaMedia))  +
scale_x_continuous(n.breaks = 8) +
scale_y_continuous(n.breaks = 8,labels = scales::percent) +
geom_point(alpha=0.5) + scale_size(range = c(0, 3)) +
scale_colour_gradientn(colours = c("red","lightgreen")) +
labs(title = "Participación elecciones vs renta media", subtitle="Basado en datos de 2019", x = "Renta media neta anual per capita", y = "Porcentaje participación", caption="Fuente: INE") +
theme_minimal() +
theme(plot.background = element_rect(fill='#212121'), text=element_text(size=14,color='#FFFFFF'),
axis.text = element_text(color='#FFFFFF'), panel.grid.major.y = element_line(color = '#55565B', linetype = "dotted"),panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),panel.grid.minor.x = element_line(color = '#55565B', linetype = "dotted"),
plot.title=element_text(size=20), legend.position="none")
knitr::opts_chunk$set(echo = TRUE)
library(scrapex)
library(rvest) #It reads HTMLs and has the html_table() funtion to automatically extract all tables from websites. It returns a list, in which there will be a table for each one.
library(httr) #Package for talking to APIs
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
link <- history_elections_spain_ex()
link
browseURL(prep_browser(link))
set_config(
user_agent("Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/109.0; Álvaro Sanz / 100385774@alumnos.uc3m.es")
)
html_website <- link %>% read_html()
html_website
all_tables <-
html_website %>% #We give html_table the web we're working with first...
html_table() #and then extract the tables.
all_tables
elections_data <- all_tables[[5]] #After inspecting all tables, we know that the one we want is number 5
elections_data
elections_data %>% select_if(is.character)
wrong_labels <- c(
"Dissolved",
"[k]",
"[l]",
"[m]",
"n",
"Banned",
"Boycotted",
"Did not run"
)
wrong_labels <- paste0(wrong_labels, collapse = "|")
wrong_labels
semi_cleaned_data <-
elections_data %>%
mutate_if( #It repeats the string replacement for all character columns.
is.character,
~ str_replace_all(string = .x, pattern = wrong_labels, replacement = NA_character_)
)
semi_cleaned_data %>% select_if(is.character)
semi_cleaned_data <-
semi_cleaned_data %>%
mutate(
Election = str_replace_all(string = Election, pattern = "Apr. |Nov. ", replacement = "")
)
semi_cleaned_data %>% select_if(is.character)
semi_cleaned_data <-
semi_cleaned_data %>%
mutate_all(as.numeric) %>%
filter(!is.na(Election))
semi_cleaned_data
semi_cleaned_data <-
semi_cleaned_data %>%
rename_all(~ str_replace_all(.x, "\\[.+\\]", "")) # \\tells the regex that the brackets, as they are special characters, need to be taken literally. The regex means: an opening bracket followed by anything repeated 1 or more times and closed by another bracket.
semi_cleaned_data
# Pivot from wide to long to plot it in ggplot
cleaned_data <-
semi_cleaned_data %>%
pivot_longer(-Election, names_to = "parties")
# Plot it
cleaned_data %>%
ggplot(aes(Election, value, color = parties)) +
geom_line() +
scale_y_continuous(labels = function(x) paste0(x, "%")) +
scale_color_viridis_d() +
theme_minimal()
link <- retirement_age_europe_ex()
link
browseURL(prep_browser(link))
html_retire <- link %>% read_html()
html_retire
tables <- html_retire %>%
html_table()
tables
retirement <- tables[[2]]
retirement
retirement <- retirement %>%
select(1:3) %>%
mutate(Men = str_sub(string = Men, start = 1, end = 2),
Men = as.numeric(Men),
Women = str_sub(string = Women, start = 1, end = 2),
Women = as.numeric(Women))%>%
pivot_longer(cols = c(Men, Women),
names_to = "name", values_to = "Age") %>%
arrange(Age, Country)
retirement
plot <- retirement %>% ggplot(aes(Age, reorder(Country, Age, decreasing = T), color = name)) +
geom_point() +
theme_minimal()
plot
names(elections) <- make.unique(names(elections))
elections <- all_tables[[6]]
elections
names(elections) <- make.unique(names(elections))
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n"))
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year)
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next")
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
mutate(Year = as.numeric(str_sub(Year, start = 1, end = 4)))
elections <- elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest(Year) %>%
filter(Year != "Next") %>%
mutate(Year = as.numeric(str_sub(Year, start = 1, end = 4)))
general <- elections %>%
filter(Type == "General elections")
general <- general$Year
general
elections
count(general)
length(general)
options(scipen=999)
?intersect
elections %>%
duplicated()
elections %>%
duplicated(Year)
elections %>%
which(duplicated())
which(duplicated(elections))
elections
elections %>%
pivot_wider(names_from = "Type", values_from = "Year") %>%
mutate(value = map(value, `length<-`, max(lengths(value)))) %>%
unnest()
elections %>%
pivot_wider(names_from = "Type", values_from = "Year") %>%
mutate(value = map(value, `length<-`, max(lengths(value))))
elections %>%
slice(-7) %>%
rename(Type = 'vte Elections and referendums in Spain',
Year = 'vte Elections and referendums in Spain.1') %>%
mutate(Year = str_split(string = Year, pattern = "\\\n")) %>%
unnest_wider(Year)
setwd "C:\Users\alvar\Desktop\git_proj"
setwd "\Users\alvar\Desktop\git_proj"
setwd "Users\alvar\Desktop\git_proj"
setwd("C:/Users/alvar/Desktop/git_proj")
setwd("C:/Users/alvar/Desktop/git_proj")
data = read.csv("input_data/ucdp-prio-acd-221")
data = read.csv("input_data/ucdp-prio-acd-221.csv")
